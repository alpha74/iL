// Return K rows in which number of 1s is lower than 0s
// https://leetcode.com/problems/the-k-weakest-rows-in-a-matrix/
// Aman Kumar

static bool sortFreq( pair<int,int> p1, pair<int,int> p2 ) 
{
    if( p1.second < p2.second )
        return true ;
    else if( p1.second == p2.second && p1.first < p2.first )
        return true ;
    return false ;
}

vector<int> kWeakestRows( vector<vector<int>>& mat, int k) 
{
    vector<pair<int,int>> numSol ;

    for( int i = 0 ; i < mat.size() ; i++ )
    {
        int count = 0 ;

        for( int j = 0 ; j < mat[i].size() ; j++ )
        {
            if( mat[i][j] == 1 )
                count++ ;
        }
        numSol.push_back( make_pair(i,count) ) ;
    }

    sort( numSol.begin(), numSol.end(), sortFreq ) ;

    vector<int> ret ;

    for( int i = 0 ; i < numSol.size() && i < k ; i++ )
        ret.push_back( numSol[i].first ) ;

    return ret ;
/*
[[1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0],[1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0],[1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0],[1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0],[1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0],[1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0],[1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0],[1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0],[1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0],[1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0],[1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0],[1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0],[1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0],[1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0],[1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0],[1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0],[1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0],[1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0]]
7
*/
}
